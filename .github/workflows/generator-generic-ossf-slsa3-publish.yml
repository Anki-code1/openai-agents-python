# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow lets you generate an SLSA provenance file for your project.
# The generation satisfies level 3 for the provenance requirements - see https://slsa.dev/spec/v0.1/requirements
# The project is an initiative of the OpenSSF (openssf.org) and is developed at
# https://github.com/slsa-framework/slsa-github-generator.
# The provenance file can be verified using https://github.com/slsa-framework/slsa-verifier.
# For more information about SLSA and how it improves the supply chain, visit slsa.dev.

name: SLSA generic generator
on:
  workflow_dispatch:
  release:
    types: [created]

Jobs:
  Build:
    runs-on: ubuntu-latest
    Outputs:
      Digests: ${{ steps.hash.outputs.digests }}

    Steps:
      - uses: actions/checkout@v4

      # ========================================================
      #
      # Step 1: Build your artifacts.
      #
      # ========================================================
      - name: Build artifacts
        run: |
            # These are some amazing artifacts.
            echo "artifact1" > artifact1
            echo "artifact2" > artifact2

      # ========================================================
      #
      # Step 2: Add a step to generate the provenance subjects
      #         as shown below. Update the sha256 sum arguments
      #         to include all binaries that you generate
      #         provenance for.
      #
      # ========================================================
      - name: Generate subject for provenance
        id: hash
        run: |
          set -euo pipefail

          # List the artifacts the provenance will refer to.
          files=$(ls artifact*)
          # Generate the subjects (base64 encoded).
          echo "hashes=$(sha256sum $files | base64 -w0)" >> "${GITHUB_OUTPUT}"

  Provenance:
    needs: [build]
    Permissions:
      Actions: read   # To read the workflow path.
      Id-token: write # To sign the provenance.
      Contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.build.outputs.digests }}"
      upload-assets: true # Optional: Upload to a new release
      Creating the YAML File**: This file is a GitHub Actions workflow to generate SLSA provenance, ensuring your Lens Studio plugin’s artifacts (like builds or releases) are secure and verifiable. Here’s a basic structure to add to your repo at `.github/workflows/generator-generic-ossf-slsa3-publish.yml`: ```yaml name: SLSA Provenance Generator on: release: types: jobs: build: runs-on: ubuntu-latest outputs: digests: ${{ steps.build.outputs.digests }} steps: - uses: actions/checkout@v3 - name: Build Plugin run: ./build-plugin.sh # Replace with your build command provenance: needs: build permissions: actions: read contents: write id-token: write uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0 with: base64-subjects: "${{ needs.build.outputs.digests }}" upload-assets: true ``` **Common Issues and Fixes**: 1. **Job Cancellation or Failure**: Like your Mac 3.9 test (ID 45075799825), SLSA workflows can fail due to missing permissions, incorrect action versions, or build script errors. Ensure your repo has permissions set (`contents: write`, `id-token: write`) and verify the `slsa-github-generator` version (v1.4.0 is stable). 2. **Invalid Workflow**: Some pull requests for similar files (e.g., in `actions/setup-node`) got flagged as spam or invalid. Double-check your YAML syntax with a linter (like `yamllint`) to avoid errors like incorrect indentation or missing fields. 3. **Dependencies Not Found**: If your build step (e.g., `build-plugin.sh`) fails, confirm all dependencies are installed. For Lens Studio, ensure your build script references the correct paths for plugin assets or AR effects. 4. **Provenance Verification**: SLSA requires actions to use full commit hashes (e.g., `slsa-framework/slsa-github-generator@<40-char-hash>`) instead of tags for security. Update to the exact commit if v1.4.0 causes issues. **Next Steps**: - Add the YAML file to your repo under `.github/workflows/`. - Push it and monitor the Actions tab for errors. - If it fails, check the logs for specifics (e.g., “missing digest” or “permission denied”). - Since you’re multitasking, you can let your Mac 3.9 test run and check this in parallel. If you’re seeing specific errors with this SLSA YAML (like the ones you mentioned),
